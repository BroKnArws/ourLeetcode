<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.mapper.ArticleMapper">

    <select id="com.neu.mapper.ArticleMapper.selectOneArticleById" resultType="com.neu.entity.Article">
        select id,title,topic_id,creator_id,thumbnail,message,likes,thinks,surprises,browse,
               initialize_time,edit_time,article_comments
        from article where id=#{id}
    </select>

    <insert id="com.neu.mapper.ArticleMapper.insertOneArticle" useGeneratedKeys="true" keyProperty="id">
        insert into article(id,creator_id,topic_id,thumbnail,title,message,summary,initialize_time)
        value (null,#{creatorId},#{topicId},#{thumbnail},#{title},#{message},#{summary},#{initializeTime})
    </insert>

    <select id="com.neu.mapper.ArticleMapper.selectCommentByArticleIdAndPage" resultType="com.neu.entity.ArticleComment">
        select id,creator_id,article_id,message,likes,dislikes,edit_time,Reported
        from comment_article
        where article_id = #{articleId}
        limit #{startPage},#{endPage}
    </select>

    <update id="com.neu.mapper.ArticleMapper.updateArticle">
        update article
        set
            topic_id = #{topicId},
            title = #{title},
            thumbnail = #{thumbnail},
            message = #{message},
            summary = #{summary},
            edit_time = #{editTime}
        where id = #{id}
    </update>

    <delete id="com.neu.mapper.ArticleMapper.deleteArticleById">
        delete from article where id = #{id}
    </delete>

</mapper>